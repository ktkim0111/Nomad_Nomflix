{"version":3,"sources":["assets/noPosterSmall.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader","role","aria-label","Containter","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","number","bool","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78fdcebb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.c7579717.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        ⏰\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Containter = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => {\r\n  return (\r\n    <Containter>\r\n      <Text color={color}>{text}</Text>\r\n    </Containter>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : require(\"../assets/noPosterSmall.jpg\").default\r\n            }\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ⭐\r\n            </span>{\" \"}\r\n            {rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPoster.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Nomflic</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"c645b0ea1a0b5699b41d6b9d6897b2c9\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV Shows | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated Shows\">\r\n              {topRated.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Shows\">\r\n              {popular.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today\">\r\n              {airingToday.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Container>\r\n      )}\r\n      ;\r\n    </>\r\n  );\r\n};\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      console.log(topRated, popular, airingToday);\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Nomflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        ></Input>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Result\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Result\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n          {tvResults &&\r\n            movieResults &&\r\n            tvResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    console.log(event);\r\n    event.preventDefault();\r\n    const { searchTerm } = this.setState;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Cant't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => {\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/noPosterSmall.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n      location: { pathname },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find anything.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  //a의 inline을 없애기 위해\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n  //Header를 Router 안에 넣은 이유 Header안에서 Router의 Link를 사용하기 위해\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}